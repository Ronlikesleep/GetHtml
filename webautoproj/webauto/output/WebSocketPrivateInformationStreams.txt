WebSocket Private Information Streams | Aboard Docs Products The Exchange Aboard Asset Management ðŸ“–Tokenomics For Beginner Video Tutorials Asset Management Tutorials For Fund Managers For Investors Financial Terms What are Futures and Perpetual Futures? Why Indices and Index Futures Matter? Order Book and Spread Explained What are Market Makers and Market Takers? Risk Management Avoid Getting Rekt How to Hedge your ANC Principal when participating in liquidity mining on Anchor? Trading Understanding Candlestick Charts How to Read Support and Resistance Market Order vs. Limit Order: When to Use Which? For developer API General Info Public Data Trades Endpoints Account Endpoints Market Data Endpoints WebSocket Public Information Streams WebSocket Private Information Streams Signature Operation GitHub Implementation Perpetuals Futures Expected Changes in Accounts Multi-position liquidation price calculation Multi-positions bankruptcy price calculation Funding Calculation Indices Aboard DeFi-20 Index Methodology Price Feeds Fund Terms Fees Social Media Powered by GitBook Authentication Path: /private Method: WebSocket Description: Websocket private channel auth on connected Parameters: Copy â”œâ”€ op: String (auth:authentication ) 
â””â”€ args: Array
   â”œâ”€ apiKey: String  (apiKey)
   â”œâ”€ timestamp: String  (second timestamp)
   â””â”€ signature: String Response: Copy â”œâ”€ event: String
â”œâ”€ code: Number
â””â”€ msg: String Example: Request: Copy {
  "op": "auth",
  "args": [
    {
      "apiKey": "985d5b66-57ce-40fb-b714-afc0b9787083",
      "timestamp": "1538054050000",
      "signature": "7L+zFQ+CEgGu5rzCj4+BdV2/uUHGqddA9pI6ztsRRPs="
    }
  ]
} Response: Copy {
  "event": "auth",
  "code": 0,
  "msg": ""
} Account Channel Path: /private Method: WebSocket Description: Channel to subscribe account update Parameters: Copy â”œâ”€ op: String  (Operation, subscribe unsubscribe)
â””â”€ args: Array
   â”œâ”€ channel: String  (account: account)
   â””â”€ asset: String Response: Copy â”œâ”€ channel: String
â”œâ”€ asset: String
â””â”€ data: Object
   â”œâ”€ totalWalletBalance: String  (total wallet balance, only for USDT asset)
   â”œâ”€ totalUnrealizedProfit: String  (total unrealized profit, only for USDT asset)
   â”œâ”€ totalMarginBalance: String  (total margin balance, only for USDT asset)
   â”œâ”€ totalPositionMargin: String  (initial margin required for positions with current mark price, only for USDT asset)
   â”œâ”€ totalFrozenMargin: String  (initial margin required for open orders with current mark price, only for USDT asset)
   â”œâ”€ totalFrozenMoney: String  (total frozen money, only for USDT asset)
   â”œâ”€ totalAvailableBalance: String  (available balance, only for USDT asset)
   â””â”€ assets: Array
      â”œâ”€ asset: String
      â”œâ”€ walletBalance: String  (wallet balance)
      â”œâ”€ unrealizedProfit: String  (unrealized profit)
      â”œâ”€ marginBalance: String  (margin balance)
      â”œâ”€ positionMargin: String  (total initial margin required with current mark price)
      â”œâ”€ frozenMargin: String  (initial margin required for open orders with current mark price)
      â”œâ”€ frozenMoney: String  (frozen money)
      â”œâ”€ availableBalance: String  (available balance)
      â””â”€ updateTime: Number Example: Request: Copy {
  "op": "subscribe",
  "args": [
    {
      "channel": "account",
      "asset": "USDT"
    }
  ]
} Response: Copy {
  "channel": "account",
  "asset": "USDT"
  "data": {
    "totalWalletBalance": "23.72469206",
    "totalUnrealizedProfit": "0.00000000",
    "totalMarginBalance": "23.72469206",
    "totalPositionMargin": "0.00000000",
    "totalFrozenMargin": "0.00000000",
    "totalFrozenMoney": "0.00000000",
    "totalAvailableBalance": "23.72469206",
    "assets": [
      {
        "asset": "USDT",
        "walletBalance": "23.72469206",
        "unrealizedProfit": "0.00000000",
        "marginBalance": "23.72469206",
        "positionMargin": "0.00000000",
        "frozenMargin": "0.00000000",
        "frozenMoney": "0.00000000",
        "availableBalance": "23.72469206",
        "updateTime": 1625474304765
      }
    ]
  }
} Positions Channel Path: /private Method: WebSocket Description: Channel to subscribe position update Parameters: Copy â”œâ”€ op: String  (Operation, subscribe unsubscribe)
â””â”€ args: Array
   â”œâ”€ channel: String  (position: positions)
   â””â”€ symbol: String  (only support empty string, which means to subscribe all symbols) Response: Copy â”œâ”€ channel: String
â”œâ”€ symbol: String
â””â”€ data: Array
   â”œâ”€ symbol: String
   â”œâ”€ positionSide: String
   â”œâ”€ marginType: String  (margin mode:ISOLATED/CROSSED)
   â”œâ”€ positionAmt: String  (Position quantity. The symbol represents the long and short direction. Positive numbers are many and negative numbers are empty)
   â”œâ”€ availableAmt: String  (Open position quantity)
   â”œâ”€ leverage: String
   â”œâ”€ openPrice: String
   â”œâ”€ unRealizedProfit: String  (Unrealized profits and losses of positions)
   â”œâ”€ positionMargin: String  (Position margin)
   â”œâ”€ isAutoAddMargin: String  (If increase margin when Isolated)
   â”œâ”€ isolatedMargin: String  (Isolated margin)
   â”œâ”€ markPrice: String  (Mark price)
   â”œâ”€ liquidationPrice: String  (Liquidation price)
   â”œâ”€ marginRate: String  (Margin rate)
   â””â”€ updateTime: Number Example: Request: Copy {
  "op": "subscribe",
  "args": [
    {
      "channel": "position",
      "symbol": ""
    }
  ]
} Response: Copy {
  "channel": "position",
  "symbol": "ETH-USDC"
  "data": [
    {
      "symbol": "ETH-USDC",
      "positionSide": "NET",
      "marginType": "CROSSED",
      "positionAmt": "-234.78",
      "availableAmt": "200",
      "leverage": "10",
      "openPrice": "0.00000",
      "unRealizedProfit": "0.00",
      "positionMargin": "0.00",
      "isAutoAddMargin": "false",
      "isolatedMargin": "0.00",
      "markPrice": "6679.50671178",
      "liquidationPrice": "0",
      "marginRate": "0",
      "updateTime": 1625474304765
    }
  ]
} Order Channel Path: /private Method: WebSocket Description: Channel to subscribe order status update Parameters: Copy â”œâ”€ op: String  (Operation, subscribe unsubscribe)
â””â”€ args: Array
   â”œâ”€ channel: String  (order: orders)
   â””â”€ symbol: String Response: Copy â”œâ”€ channel: String
â”œâ”€ symbol: String
â””â”€ data: Array
   â”œâ”€ symbol: String
   â”œâ”€ side: String
   â”œâ”€ positionSide: String
   â”œâ”€ status: String
   â”œâ”€ price: String
   â”œâ”€ origQty: String  (Original quantity)
   â”œâ”€ origType: String  (Original order type)
   â”œâ”€ type: String  (order type)
   â”œâ”€ timeInForce: String
   â”œâ”€ orderId: String  (System order number)
   â”œâ”€ clientOrderId: String  (User defined order number)
   â”œâ”€ reduceOnly: Boolean  (if reduce position only)
   â”œâ”€ workingType: String  (Conditional price trigger type)
   â”œâ”€ stopPrice: String  (please ignore when order type is TRAILING_STOP_MARKET)
   â”œâ”€ closePosition: Boolean  (if Close-All)
   â”œâ”€ activatePrice: String  (activation price, only return with TRAILING_STOP_MARKET order)
   â”œâ”€ priceRate: String  (callback rate, only return with TRAILING_STOP_MARKET order)
   â”œâ”€ priceProtect: Boolean  (if conditional order trigger is protected)
   â”œâ”€ orderTime: Number
   â”œâ”€ cumQuote: String  (trades amount)
   â”œâ”€ executedQty: String  (trades quantity)
   â”œâ”€ avgPrice: String  (trades price)
   â”œâ”€ updateTime: Number
   â””â”€ frozenMargin: String Example: Request: Copy {
  "op": "subscribe",
  "args": [
    {
      "channel": "order",
      "symbol": "ETH-USDC"
    }
  ]
} Response: Copy {
  "channel": "order",
  "symbol": "ETH-USDC"
  "data": [
    {
      "symbol": "ETH-USDC",
      "side": "BUY",
      "positionSide": "SHORT",
      "status": "NEW",
      "price": "0",
      "origQty": "0.40",
      "origType": "TRAILING_STOP_MARKET",
      "type": "TRAILING_STOP_MARKET",
      "timeInForce": "GTC",
      "orderId": "1573346959",
      "clientOrderId": "abc",
      "reduceOnly": false,
      "workingType": "LAST_PRICE",
      "stopPrice": "9300",
      "closePosition": false,
      "activatePrice": "9020",
      "priceRate": "0.3",
      "priceProtect": false,
      "orderTime": 1579276756075,
      "cumQuote": "0",
      "executedQty": "0",
      "avgPrice": "0.00000",
      "updateTime": 1579276756075,
      "frozenMargin": "12.34"
    }
  ]
} PreviousWebSocket Public Information Streams NextSignature Operation Last updated 1 year ago On this page Authentication Account Channel Positions Channel Order Channel